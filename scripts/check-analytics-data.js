#!/usr/bin/env node

require('dotenv').config();
const mongoose = require('mongoose');
const Analytics = require('../models/analytics');

async function checkData() {
    try {
        await mongoose.connect(process.env.MONGODB_URI, {
            useNewUrlParser: true,
            useUnifiedTopology: true
        });

        console.log('‚úÖ –°–≤—ä—Ä–∑–∞–Ω —Å MongoDB\n');

        // –û–±—â –±—Ä–æ–π –∑–∞–ø–∏—Å–∏
        const totalCount = await Analytics.countDocuments();
        console.log(`üìä –û–±—â–æ –∑–∞–ø–∏—Å–∏ –≤ Analytics: ${totalCount}\n`);

        if (totalCount === 0) {
            console.log('‚ùå –ù—è–º–∞ –∑–∞–ø–∏—Å–∞–Ω–∏ –¥–∞–Ω–Ω–∏ –≤ Analytics –∫–æ–ª–µ–∫—Ü–∏—è—Ç–∞');
            console.log('\nüí° –í—ä–∑–º–æ–∂–Ω–∏ –ø—Ä–∏—á–∏–Ω–∏:');
            console.log('   1. Analytics middleware –Ω–µ –µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω');
            console.log('   2. –°–∞–π—Ç—ä—Ç –Ω–µ –µ –∏–º–∞–ª –ø–æ—Å–µ—â–µ–Ω–∏—è');
            console.log('   3. Middleware-—ä—Ç –Ω–µ –∑–∞–ø–∏—Å–≤–∞ –¥–∞–Ω–Ω–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ\n');
            
            console.log('üîß –ü—Ä–æ–≤–µ—Ä–µ—Ç–µ:');
            console.log('   - –î–∞–ª–∏ middleware/analytics.js –µ –¥–æ–±–∞–≤–µ–Ω –≤ server.js');
            console.log('   - –î–∞–ª–∏ –∏–º–∞ –≥—Ä–µ—à–∫–∏ –≤ –∫–æ–Ω–∑–æ–ª–∞—Ç–∞ –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞');
            console.log('   - –î–∞–ª–∏ —Å–∞–π—Ç—ä—Ç –µ –¥–æ—Å—Ç—ä–ø–µ–Ω –∏ –∏–º–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è\n');
        } else {
            // –ù–∞–π-—Ä–∞–Ω–µ–Ω –∑–∞–ø–∏—Å
            const earliest = await Analytics.findOne().sort({ timestamp: 1 });
            console.log(`üìÖ –ù–∞–π-—Ä–∞–Ω–µ–Ω –∑–∞–ø–∏—Å: ${earliest.timestamp.toLocaleString('bg-BG')}`);

            // –ù–∞–π-–Ω–æ–≤ –∑–∞–ø–∏—Å
            const latest = await Analytics.findOne().sort({ timestamp: -1 });
            console.log(`üìÖ –ù–∞–π-–Ω–æ–≤ –∑–∞–ø–∏—Å: ${latest.timestamp.toLocaleString('bg-BG')}\n`);

            // –ó–∞–ø–∏—Å–∏ –ø–æ –¥–Ω–∏
            const byDay = await Analytics.aggregate([
                {
                    $group: {
                        _id: {
                            $dateToString: { format: '%Y-%m-%d', date: '$timestamp' }
                        },
                        count: { $sum: 1 }
                    }
                },
                { $sort: { _id: -1 } },
                { $limit: 10 }
            ]);

            console.log('üìä –ó–∞–ø–∏—Å–∏ –ø–æ –¥–Ω–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ 10 –¥–Ω–∏):');
            console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
            
            byDay.forEach(day => {
                console.log(`${day._id}: ${day.count} –ø–æ—Å–µ—â–µ–Ω–∏—è`);
            });

            console.log('\nüí° –ó–∞ –¥–∞ –≤–∏–¥–∏—Ç–µ –ø—ä–ª–Ω–∏—è –∞–Ω–∞–ª–∏–∑, –æ—Ç–≤–æ—Ä–µ—Ç–µ:');
            console.log('   http://localhost:3000/bot-analysis.html\n');
        }

        await mongoose.connection.close();
        process.exit(0);

    } catch (error) {
        console.error('‚ùå –ì—Ä–µ—à–∫–∞:', error.message);
        process.exit(1);
    }
}

checkData();
